<template>
  <div class="mod-config">
    <el-form id="specialForm" :inline="true" :model="dataForm" ref="searchForm" @keyup.enter.native="getDataList()">
    	<el-row :span="24">
    		<el-col :span="6">
    		  <el-form-item>参数：</el-form-item>
		      <el-form-item prop="key">
		        <el-input v-model="dataForm.key" placeholder="参数名" clearable></el-input>
		      </el-form-item>
		    </el-col>
		    <el-col :span="18">
		      <el-form-item>发布时间：</el-form-item>
		      <el-form-item>
		        <date-time-picker @sendDateTime="getDateTime" :clear-time="clearTime"></date-time-picker>
		      </el-form-item>
		    
		      <el-form-item style="float: right;"> 
		        <el-button style="margin-left: 8px;" v-if="!flag" v-on:click="getDataList()" type="primary">查询</el-button>
		        <el-button style="margin-left: 8px;" v-else disabled>查询</el-button>
		        <el-button @click="reset('searchForm')">重置</el-button>
		      </el-form-item>
		     </el-col>
		</el-row>
    </el-form>
    <div class="operatBtn">
      <el-button type="primary" @click="addOrUpdateHandle()">新增</el-button>
      <el-button  @click="deleteHandle()" :disabled="dataListSelections.length <= 0">批量删除</el-button>
        <el-button type="define" @click="exportExcel()">导出</el-button>
    </div>
    <el-table
      :data="dataList"
      border
      v-loading="dataListLoading"
      @selection-change="selectionChangeHandle"
      style="width: 100%;">
      <el-table-column
        type="selection"
        header-align="center"
        align="center"
        width="50">
      </el-table-column>
#foreach($column in $columns)
    #if(${column.comments.indexOf("type_key")}!=-1)
      <el-table-column
        prop="${column.attrname}Name"
        header-align="center"
        align="center"
         #if(${column.comments.indexOf("type_key")}!=-1)
			#set($i=$column.comments.indexOf("t"))
        label="${column.comments.substring(0,$i)}">
         #end
      </el-table-column>
   #else
    <el-table-column
        prop="${column.attrname}"
        header-align="center"
        align="center"
        label="${column.comments}">
      </el-table-column>
   #end
#end
      <el-table-column
        fixed="right"
        header-align="center"
        align="center"
        width="150"
        label="操作">
        <template slot-scope="scope">
          <el-button type="text" size="small" @click="addOrUpdateHandle(scope.row.${pk.attrname})">修改</el-button>
          <el-button type="text" size="small" @click="deleteHandle(scope.row.${pk.attrname})">删除</el-button>
          <el-button type="text" size="small" @click="detailHandle(scope.row.${pk.attrname})">详情</el-button>
        </template>
      </el-table-column>
    </el-table>
    <el-pagination
      @size-change="sizeChangeHandle"
      @current-change="currentChangeHandle"
      :current-page="pageIndex"
      :page-sizes="[10, 20, 50, 100]"
      :page-size="pageSize"
      :total="totalPage"
      layout="total, sizes, prev, pager, next, jumper">
    </el-pagination>
    <!-- 弹窗, 新增 / 修改 -->
    <add-or-update v-if="addOrUpdateVisible" ref="addOrUpdate" @refreshDataList="getDataList"></add-or-update>
    <detail-base v-if="detailVisible" ref="detail" @refreshDataList="getDataList">></detail-base>
  </div>
</template>

<script>
  import AddOrUpdate from './${pathName}-add-or-update'
  import DetailBase from './${pathName}-detail-base.vue'
  import DateTimePicker from '../../common/dateTimePicker.vue'
  import { configFun, deleteFn } from '../../../utils/utils.js'
  
  export default {
    data () {
      return {
        dataForm: {
          key: ''
        },
        dataList: [],
        pageIndex: 1,
        pageSize: 10,
        totalPage: 0,
        dataListLoading: false,
        dataListSelections: [],
        addOrUpdateVisible: false,
        detailVisible: false,
        time: '', // 存子组件中的time值
        clearTime: false, // 重置时间状态
        createDateStart: '', // 开始时间
        createDateEnd: '', // 结束时间
        flag: false
      }
    },
    components: {
      AddOrUpdate,
      DetailBase,
      DateTimePicker
    },
    activated () {
      this.getDataList()
    },
    methods: {
      // 获取数据列表
      getDataList () {
        this.dataListLoading = true
        this.flag = true
        #[[this.$http({]]#
          #[[url: this.$http.adornUrl]]#('/${moduleName}/${pathName}/page'),
          method: 'post',
          #[[data: this.$http.adornParams({]]#
            'pageIndex': this.pageIndex,
            'pageSize': this.pageSize,
            'object': {
              'key': this.dataForm.key,
              'createDateStart': this.createDateStart,
              'createDateEnd': this.createDateEnd
            }
          })
        }).then(({data}) => {
          if (data && data.code === 0) {
            this.dataList = data.data.list
            this.totalPage = data.data.total
          } else {
            this.dataList = []
            this.totalPage = 0
          }
          this.dataListLoading = false
          this.flag = false
        })
      },
      // 每页数
      sizeChangeHandle (val) {
        this.pageSize = val
        this.pageIndex = 1
        this.getDataList()
      },
      // 当前页
      currentChangeHandle (val) {
        this.pageIndex = val
        this.getDataList()
      },
      // 多选
      selectionChangeHandle (val) {
        this.dataListSelections = val
      },
      // 新增 / 修改
      addOrUpdateHandle (id) {
        this.addOrUpdateVisible = true
        #[[this.$nextTick(() => {]]#
          this.$refs.addOrUpdate.init(id)
        })
      },
      // 删除
      deleteHandle (id) {
        let self = this
        deleteFn(id, self, '/${moduleName}/${pathName}/delete', '${pk.attrname}')
      },
      // 详情
      detailHandle (id) {
        this.detailVisible = true
        this.$nextTick(() => {
          this.$refs.detail.init(id)
        })
      },
      // 获取子组件中的时间
      getDateTime (data) {
        this.time = data.time
        this.createDateStart = data.startTime
        this.createDateEnd = data.endTime
      },
      // 导出
      exportExcel() {
        // let table = document.querySelector('.el-table__fixed-right');
        configFun('.el-table__fixed-right');
      },
      //重置
      reset (searchForm) {
        this.$refs.searchForm.resetFields()
        this.clearTime = true
        this.createDateStart = ''
        this.createDateEnd = ''
      },
    },
    watch: {
      // 监听时间有没有发生变化
      time (val) {
        if (val) {
          this.clearTime = false
        }
      }
    }
  }
</script>
